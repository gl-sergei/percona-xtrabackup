# BUG#12161 Xa recovery and client disconnection
#
# The test verifies correct XA transaction two phase logging and its applying
# in a case the transaction updates transactional and non-transactional tables.

--source include/not_gtid_enabled.inc
--source include/master-slave.inc

--connection master
CALL mtr.add_suppression("Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT");

# Test randomizes the following variable's value:
SET @@session.binlog_direct_non_transactional_updates := if(floor(rand()*10)%2,'ON','OFF');
CREATE TABLE t (a INT) ENGINE=innodb;

# memorize for the following show
--let $binlog_start= query_get_value(SHOW MASTER STATUS, Position, 1)
--let $binlog_file= query_get_value(SHOW MASTER STATUS, File, 1)

CREATE TABLE tm (a INT) ENGINE=myisam;

# case A: COMMIT

# Non transactional table goes first
XA START '1';
INSERT INTO tm VALUES (1);
INSERT INTO t VALUES (1);
XA END '1';
XA PREPARE '1';
XA COMMIT '1';

# Transactional table goes first
XA START '2';
INSERT INTO t VALUES (2);
--disable_warnings
INSERT INTO tm VALUES (2);
--enable_warnings
INSERT INTO t VALUES (2);
XA END '2';
XA PREPARE '2';
XA COMMIT '2';

# case B: ROLLBACK

# Non transactional table goes first
XA START '3';
--disable_warnings
INSERT INTO tm VALUES (3);
--enable_warnings
INSERT INTO t VALUES (3);
XA END '3';
XA PREPARE '3';
XA ROLLBACK '3';

# Transactional table goes first
XA START '4';
INSERT INTO t VALUES (4);
--disable_warnings
INSERT INTO tm VALUES (4);
--enable_warnings
INSERT INTO t VALUES (4);
XA END '4';
XA PREPARE '4';
XA ROLLBACK '4';

--source include/sync_slave_sql_with_master.inc

--let $diff_tables= master:tm, slave:tm
--source include/diff_tables.inc

# cleanup

--connection master

DELETE FROM t;
DROP TABLE t, tm;

--source include/sync_slave_sql_with_master.inc

--source include/rpl_end.inc
